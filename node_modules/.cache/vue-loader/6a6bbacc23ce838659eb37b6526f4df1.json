{"remainingRequest":"/home/giovany0068/proyecto-nuberries/nuberries/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/giovany0068/proyecto-nuberries/nuberries/src/components/Dropdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/giovany0068/proyecto-nuberries/nuberries/src/components/Dropdown.vue","mtime":1566208420000},{"path":"/home/giovany0068/proyecto-nuberries/nuberries/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/giovany0068/proyecto-nuberries/nuberries/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/giovany0068/proyecto-nuberries/nuberries/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/giovany0068/proyecto-nuberries/nuberries/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'drop-down',\n  props: {\n    direction: {\n      type: String,\n      default: 'down'\n    },\n    title: String,\n    icon: String,\n    position: String,\n    hideArrow: Boolean,\n    tag: {\n      type: String,\n      default: 'li'\n    }\n  },\n  data() {\n    return {\n      isOpen: false\n    };\n  },\n  provide() {\n    return {\n      closeDropDown: this.closeDropDown\n    }\n  },\n  methods: {\n    toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit('change', this.isOpen);\n    },\n    closeDropDown() {\n      this.isOpen = false;\n      this.$emit('change', this.isOpen);\n    }\n  }\n};\n",{"version":3,"sources":["Dropdown.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Dropdown.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <component\n    class=\"dropdown\"\n    :is=\"tag\"\n    :class=\"[\n      { show: isOpen },\n      { dropdown: direction === 'down' },\n      { dropup: direction === 'up' }\n    ]\"\n    aria-haspopup=\"true\"\n    :aria-expanded=\"isOpen\"\n    @click=\"toggleDropDown\"\n    v-click-outside=\"closeDropDown\"\n  >\n    <slot name=\"title\">\n      <a\n        class=\"dropdown-toggle nav-link\"\n        :class=\"{ 'no-caret': hideArrow }\"\n        data-toggle=\"dropdown\"\n      >\n        <i :class=\"icon\"></i>\n        <span class=\"no-icon\">{{ title }}</span>\n      </a>\n    </slot>\n    <ul\n      class=\"dropdown-menu\"\n      :class=\"[\n        { 'dropdown-menu-right': position === 'right' },\n        { show: isOpen }\n      ]\"\n    >\n      <slot></slot>\n    </ul>\n  </component>\n</template>\n<script>\nexport default {\n  name: 'drop-down',\n  props: {\n    direction: {\n      type: String,\n      default: 'down'\n    },\n    title: String,\n    icon: String,\n    position: String,\n    hideArrow: Boolean,\n    tag: {\n      type: String,\n      default: 'li'\n    }\n  },\n  data() {\n    return {\n      isOpen: false\n    };\n  },\n  provide() {\n    return {\n      closeDropDown: this.closeDropDown\n    }\n  },\n  methods: {\n    toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit('change', this.isOpen);\n    },\n    closeDropDown() {\n      this.isOpen = false;\n      this.$emit('change', this.isOpen);\n    }\n  }\n};\n</script>\n<style>\n.dropdown {\n  list-style-type: none;\n}\n\n.dropdown .dropdown-toggle {\n  cursor: pointer;\n}\n</style>\n"]}]}